#!/usr/bin/env ruby
#
# Copyright (c) 2011 Mark Heily <mark@heily.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

$VERBOSE = true
$LOAD_PATH << File.dirname(__FILE__) + '/makeconf'

require 'makeconf'

pthread_libs = Platform.is_windows? ? [] : ['-lpthread', '-lrt']

m = Makeconf.new()

p = Project.new({
        :id => 'libpthread_workqueue',
        :version => '0.8.2',
        :extra_dist => ['LICENSE', 'src/*.[ch]', 'src/*/*.[ch]'],
        :manpages => 'pthread_workqueue.3',
        :headers => 'pthread_workqueue.h',
        })

p.build Library.new({
        :id => 'libpthread_workqueue',
        :cflags => '-Wall -Wextra -Werror -D_XOPEN_SOURCE=600 -D__EXTENSIONS__ -D_GNU_SOURCE -std=c99 -I./include -I./src',
        :sources => [ 'src/*.c',
            (Platform.is_windows? ? 'src/windows/*.c' : 'src/posix/*.c') ],
        :ldadd => [ pthread_libs ],
        })

p.test(Binary.new(
        :id => 'api',
        :sources => [ 'testing/api/test.c' ],
        :ldadd => ['-lpthread_workqueue', pthread_libs ]
        ))


m.configure(p)
m.finalize

#headers: 
#  - pthread_workqueue.h

#manpages:
#  - pthread_workqueue.3
#
#extra_dist: [ 'LICENSE', 'src/*.[ch]', 'src/*/*.[ch]' ]
#
#tests:
#
#  api:
#    sources: [ testing/api/test.c ]
#    ldadd: '-lpthread_workqueue' 
#
#  latency:
#    sources: [ testing/latency/latency.c ]
#    ldadd: '-lpthread_workqueue' 
#
#  witem_cache:
#    sources: [ testing/witem_cache/test.c ]
#    ldadd: '-lpthread_workqueue' 
#
# Package metadata
#pkg_summary="pthread_workqueue library"
#pkg_description="pthread_workqueue library"
#license="BSD"
#author="Mark Heily"

#pre_configure_hook() {
#  if [ "$debug" = "yes" ] ; then
#      cflags="$cflags -g3 -O0 -DPTHREAD_WORKQUEUE_DEBUG -rdynamic"
#  else
#      cflags="$cflags -g -O2"
#  fi
#  check_header err.h
#}

#post_configure_hook() {
#
#    cflags="$cflags"
#    case "$target" in
#    windows)
#        cflags="$cflags -mthreads"
#        ldflags="$ldflags -mthreads"
#    	;;
#    solaris)
#        # TODO: would like to have -fvisibility=hidden but not supported
#        #       by SFWgcc
#        #
##        cflags="$cflags -m64 -fpic"
#    	ldflags="$ldflags -m64 -fpic -lumem"
#    	;;
#    *)
#        if [ "`uname -m`" = "x86_64" ] ; then
#            arch_flags="-m64"
#        else
#            arch_flags=""
#        fi
#        cflags="$cflags $arch_flags -fpic -fvisibility=hidden -pthread"
#    	ldflags="$ldflags $arch_flags -fpic -pthread"
#	;;
#    esac
#}
